// ------------------------------------------------------------------------------
// DO NOT MODIFY THIS CLASS - AutoGenerated Code
//    Any changes made to this code will be lost the next time this 
//    code is regenerated.
// 
//    Generated at: 8/24/2012 6:03:55 PM
//    DevForce version: 7.0.0.0
//    Template version: 2.1.4
// ------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using IbEm   = IdeaBlade.EntityModel;
using IbCore = IdeaBlade.Core;
using IbVal  = IdeaBlade.Validation;

[module: IbCore.IdeaBladeLicense("DcdmOIhWifrP4DwMOQL/ay8WEjsjkA9R/aBAmBfHHsCzQVC+bURrKJy7B/s+Uiuw")]

namespace TodoServer { 

  #region TodoEntities

  /// <summary>
  /// The domain-specific EntityManager for your domain model.
  /// </summary>
  public partial class TodoEntities : IbEm.EntityManager {

    #region Constructors

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(bool, string, IbEm.EntityServiceOption, string)"/>. </summary>
    public TodoEntities(bool shouldConnect=true, string dataSourceExtension=null, IbEm.EntityServiceOption entityServiceOption=IbEm.EntityServiceOption.UseDefaultService, string compositionContextName=null) : base(shouldConnect, dataSourceExtension, entityServiceOption, compositionContextName) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManagerContext)"/>. </summary>
    public TodoEntities(IbEm.EntityManagerContext entityManagerContext) : base(entityManagerContext) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManager, bool, string, IbEm.EntityServiceOption, string)"/>. </summary>
    public TodoEntities(IbEm.EntityManager entityManager, bool shouldConnect, string dataSourceExtension=null, IbEm.EntityServiceOption entityServiceOption=IbEm.EntityServiceOption.UseDefaultService, string compositionContextName=null) : base(entityManager, shouldConnect, dataSourceExtension, entityServiceOption, compositionContextName) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManager, IbEm.EntityManagerContext)"/>. </summary>
    public TodoEntities(IbEm.EntityManager entityManager, IbEm.EntityManagerContext entityManagerContext=null) : base(entityManager, entityManagerContext) {}

    static TodoEntities() {
      IbEm.EntityRelation.InitializeEntityRelations(IdeaBlade.Core.Reflection.ReflectionExtensions.GetAssembly(typeof(TodoEntities)));
    }
    #endregion Constructors

    #region EntityQueries

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<TodoItem> TodoItems {
      get { return new IbEm.EntityQuery<TodoItem>("TodoItems", this); }
    }
    #endregion EntityQueries
  }
  #endregion TodoEntities

  #region TodoItem class

  /// <summary>The auto-generated TodoItem class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"TodoEntities")]
  [IbEm.DefaultEntitySetName(@"TodoModelContainer.TodoItems")]
  public partial class TodoItem : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<TodoItem, object>> expr) {
      return IbCore.PropertyPath.For<TodoItem>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="TodoItem_Id")]
    public int Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="TodoItem_Description")]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Completed. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Completed", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="TodoItem_Completed")]
    public bool Completed {
      get { return PropertyMetadata.Completed.GetValue(this); }
      set { PropertyMetadata.Completed.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Archived. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Archived", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="TodoItem_Archived")]
    public bool Archived {
      get { return PropertyMetadata.Archived.GetValue(this); }
      set { PropertyMetadata.Archived.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<TodoItem, int> Id = new IbEm.DataEntityProperty<TodoItem, int>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<TodoItem, string> Description = new IbEm.DataEntityProperty<TodoItem, string>("Description", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Completed <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<TodoItem, bool> Completed = new IbEm.DataEntityProperty<TodoItem, bool>("Completed", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Archived <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<TodoItem, bool> Archived = new IbEm.DataEntityProperty<TodoItem, bool>("Archived", false, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String Description = "Description";
      public const String Completed = "Completed";
      public const String Archived = "Archived";
    }
    #endregion EntityPropertyNames
  }
  #endregion TodoItem class

  #region EntityRelations

  /// <summary>
  /// A generated class that returns the relations between entities in this model.
  /// </summary>
  [IbCore.IdeaBladeGuid("59acdf8c-c989-426e-b8c5-8f1e62b3a986", "2.1.4")]
  public partial class EntityRelations : IbEm.IEntityRelations {

    /// Explicit static constructor ensures static fields are initialized.
    static EntityRelations() {}
  }
  #endregion EntityRelations
}
